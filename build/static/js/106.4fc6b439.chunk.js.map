{"version":3,"file":"static/js/106.4fc6b439.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './comicsList.scss';\r\nimport ErrorMessage from '../errorModal/errorModal';\r\nimport Spinner from '../spinner/spinner';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([])\r\n    const [offset, setOffset] = useState(200)\r\n    const [newItemLoading, setNewItemLoading] = useState(false)\r\n\r\n    const {loading, error, getNewComics} = useMarvelService()\r\n    const [comicsEnded, setcomicsEnded] = useState(false)\r\n\r\n    useEffect(() => {\r\n        onLoadMore(offset, true)\r\n        // eslint-disable-next-line\r\n    },[])\r\n\r\n    const OnLoadComics = (newComics) => {\r\n        console.log(newComics)\r\n        let ended = false;\r\n        if (newComics.length < 7) {\r\n            ended = true;\r\n        }\r\n        setComicsList(comicsList => [...comicsList, ...newComics])\r\n        setNewItemLoading(false)\r\n        setOffset(offset => offset + 8)\r\n        console.log(offset)\r\n        setcomicsEnded(ended)\r\n    }\r\n    const onLoadMore = (offset, initial) =>\r\n    {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\r\n       getNewComics(offset)\r\n            .then(OnLoadComics)\r\n       \r\n    }\r\n     function renderItems(arr) {\r\n        const items = arr.map((item,i) => { return(\r\n        <li tabIndex={0}\r\n        key={i} \r\n        className=\"comics__item\">\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n        </li>)\r\n\r\n    })\r\n        return(\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n}\r\n    const items = renderItems(comicsList)\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button className=\"button button__main button__long\"\r\n             disabled = {newItemLoading}\r\n             onClick = {() => onLoadMore(offset, false)}\r\n             style={{'display': comicsEnded ? 'none' : 'block'}}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import Banner from \"../banner/Banner\";\r\nimport ComicsList from '../comicsList/ComicsList'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n\r\nconst ComicPage = () => {\r\n\r\n\r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                name=\"description\"\r\n                content='Information about many comics'\r\n                />\r\n                <title>Comics pager</title>\r\n            </Helmet>\r\n            <Banner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicPage"],"names":["_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","offset","setOffset","_useState5","_useState6","newItemLoading","setNewItemLoading","_useMarvelService","useMarvelService","loading","error","getNewComics","_useState7","_useState8","comicsEnded","setcomicsEnded","useEffect","onLoadMore","OnLoadComics","newComics","console","log","ended","length","concat","_toConsumableArray","initial","then","items","arr","map","item","i","_jsx","tabIndex","className","children","_jsxs","Link","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","onClick","style","_Fragment","Helmet","name","content","Banner","ComicsList"],"sourceRoot":""}