{"version":3,"file":"static/js/858.6974438a.chunk.js","mappings":"8LAyDA,UA7CmB,SAAHA,GAA+B,IAA1BC,EAASD,EAATC,UAAWC,EAAQF,EAARE,SACjBC,GAAMC,EAAAA,EAAAA,MAAND,GACPE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAgEC,EAAAA,EAAAA,KAAzDC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAWJ,EAAXI,YAAaC,EAAYL,EAAZK,aAAcC,EAAUN,EAAVM,YAElDC,EAAAA,EAAAA,YAAU,WACNC,IACAC,QAAQC,IAAIlB,EAEhB,GAAG,CAACA,IAEJ,IAAMgB,EAAa,WAGf,OAFAF,IAEQf,GACJ,IAAK,QACDa,EAAYZ,GAAImB,KAAKC,GACrB,MACJ,IAAK,YACDP,EAAab,GAAImB,KAAKC,GACtB,MACJ,QACI,MAAM,IAAIC,MAAO,wBAG7B,EAEMD,EAAe,SAACd,GAClBC,EAAQD,EACZ,EAEMgB,EAAeX,GAAQY,EAAAA,EAAAA,KAACC,EAAAA,EAAY,IAAK,KACzCC,EAAUf,GAAUa,EAAAA,EAAAA,KAACG,EAAAA,EAAO,IAAK,KACjCC,EAAYjB,GAAWC,IAAUL,EAAmC,MAA3BiB,EAAAA,EAAAA,KAACzB,EAAS,CAACQ,KAAMA,IAEhE,OACIsB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIP,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,IACTT,EACAG,EACAE,IAGjB,C","sources":["components/pages/SinglePage.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorModal/errorModal';\r\nimport AppBanner from \"../banner/Banner\";\r\n\r\n// Хотелось бы вынести функцию по загрузке данных как отдельный аргумент\r\n// Но тогда мы потеряем связь со стэйтами загрузки и ошибки\r\n// А если вынесем их все в App.js - то они будут одни на все страницы\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n        const {id} = useParams();\r\n        const [data, setData] = useState(null);\r\n        const {loading, error, getNewComic, getCharacter, clearError} = useMarvelService();\r\n\r\n        useEffect(() => {\r\n            updateData()\r\n            console.log(id)\r\n            // eslint-disable-next-line\r\n        }, [id])\r\n\r\n        const updateData = () => {\r\n            clearError();\r\n\r\n            switch (dataType) {\r\n                case 'comic':\r\n                    getNewComic(id).then(onDataLoaded);\r\n                    break;\r\n                case 'character':\r\n                    getCharacter(id).then(onDataLoaded);\r\n                    break;\r\n                default:\r\n                    throw new Error ('something went wrong')\r\n                    \r\n            }\r\n        }\r\n\r\n        const onDataLoaded = (data) => {\r\n            setData(data);\r\n        }\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !data) ? <Component data={data}/> : null;\r\n\r\n        return (\r\n            <>\r\n                <AppBanner/>\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SinglePage;"],"names":["_ref","Component","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","data","setData","_useMarvelService","useMarvelService","loading","error","getNewComic","getCharacter","clearError","useEffect","updateData","console","log","then","onDataLoaded","Error","errorMessage","_jsx","ErrorMessage","spinner","Spinner","content","_jsxs","_Fragment","children","AppBanner"],"sourceRoot":""}